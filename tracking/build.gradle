/*
 *
 * Copyright 2017 TedaLIEz
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

task findbugs(type: FindBugs) {
    excludeFilter = rootProject.file("settings/findbugs/rules-findbugs.xml")
    classes = fileTree("$project.buildDir/intermediates/classes/release/com/hustunique/jianguo/tracking")
    source = fileTree('src/main/java/com/hustunique/jianguo/tracking')
    classpath = files()

    reports {
        xml.enabled = false
        html.enabled = true
        html.destination = "$project.buildDir/reports/findbugs/findbugs.html"
    }
}

task checkstyle(type: Checkstyle) {
    showViolations = false
    configFile rootProject.file("settings/checkstyle/checkstyle.xml")
    ignoreFailures = false
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    // empty classpath
    classpath = files()
}


checkstyle {
    toolVersion = '7.6'
}

afterEvaluate {
    tasks.findByName('check').dependsOn('checkstyle')
    tasks.findByName('build').dependsOn('findbugs')
}



